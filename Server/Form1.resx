<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="backgroundWorker1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ZbsAAAAASUVORK5CYII=
</value>
  </data>
</root>